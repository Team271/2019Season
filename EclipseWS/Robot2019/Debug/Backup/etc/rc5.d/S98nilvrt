#!/bin/sh
# Copyright (c) 2013 National Instruments.
# All rights reserved.

MAX_CRASHES=2
PID_RUNLVRT=/var/run/runlvrt.pid
PID_LVRT_WRAPPER=/var/run/lvrt_wrapper.pid

# runlvrt is a function that:
# - restarts lvrt if it crashes
# - disables statup application and blinks the LED in case of MAX_CRASHES
#   of startup application
# - no limit on crashes for the interactive session
runlvrt() {
  CRASH_COUNT=0

  # "NORMAL_START"               - first run
  # "CRASHED_AND_RESTART"        - lvrt crashed so we have to restart in a
  #                                normal fashion
  # "CRASHED_AND_NO_APP_RESTART" - lvrt crashed and we need to restart lvrt
  #                                without the startup application
  STARTUP_PARAM=NORMAL_START

  UI_ENABLED=`/usr/local/natinst/bin/nirtcfg -g section=SYSTEMSETTINGS,token=ui.enabled | tr "[:upper:]" "[:lower:]"`

  while true
  do
    # nirtcfg only reads from ni-rt.ini, so read lvrt.conf with grep
    STARTUPAPP_ENABLED=false
    grep -Eqi "^RTTarget.LaunchAppAtBoot *= *\"?True\"?$" /etc/natinst/share/lvrt.conf && STARTUPAPP_ENABLED=true

    YOU_ONLY_LIVE_TWICE_TOKEN=`/usr/local/natinst/bin/nirtcfg -g section=Startup,token=YouOnlyLiveTwice | tr "[:upper:]" "[:lower:]"`

    if [[ "$STARTUPAPP_ENABLED" == "true" ]]; then
      if [[ "$YOU_ONLY_LIVE_TWICE_TOKEN" != "false" ]]; then
        if [[ $MAX_CRASHES -le $CRASH_COUNT ]]; then
          echo "Startup application prevented from running at startup. The startup application crashed during previous startup attempts."

          # set LED to 4 blinks constantly repeating
          /usr/local/natinst/bin/status_led blink_count 4

          # disable startup app for the rest of the session (until reboot)
          STARTUP_PARAM=CRASHED_AND_NO_APP_RESTART
        fi
      fi
    fi

    /bin/su -- lvuser -l -c "/etc/init.d/lvrt-wrapper $STARTUP_PARAM $PID_LVRT_WRAPPER $UI_ENABLED"
    EXITCODE=$?
    # 42 is the LV watchdog restart exit code which is not a crash
    if [ $EXITCODE != 0 -a $EXITCODE != 42 ]; then
        STARTUP_PARAM=CRASHED_AND_RESTART
        CRASH_COUNT=$[CRASH_COUNT+1]
    else
        STARTUP_PARAM=NORMAL_START
        CRASH_COUNT=0
    fi
  done
}

case "$1" in
  start)
    [ -f $PID_RUNLVRT ] && exit 1
    [ -f $PID_LVRT_WRAPPER ] && exit 1

    touch $PID_RUNLVRT
    chmod +r $PID_RUNLVRT

    touch $PID_LVRT_WRAPPER
    # we need user lvuser to write its PID
    chown lvuser $PID_LVRT_WRAPPER
    chmod +r $PID_LVRT_WRAPPER

    runlvrt &
    # save runlvrt process PID to /var/run
    echo $! > $PID_RUNLVRT
    ;;
  stop)
    # kill saved PID for runlvrt process
    if [[ -f "$PID_RUNLVRT" ]]; then
      kill `cat $PID_RUNLVRT`
      rm $PID_RUNLVRT
    fi

    # kill saved PID for lvrt_wrapper process
    if [[ -f "$PID_LVRT_WRAPPER" ]]; then
      kill `cat $PID_LVRT_WRAPPER`
      rm $PID_LVRT_WRAPPER
    fi
    ;;
esac
